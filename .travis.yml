# Main resources:
# https://dzone.com/articles/applying-cicd-to-java-apps-using-spring-boot

# Travis CI is a CI/CD solution to help you test, build and deploy your app to somewhere else.

# This file is to tell Travis CI what should it do to build your app correctly.
# Think of it as an OS when you're running Travis CI environment. Travis CI has to give you an OS to run all your stuffs.
# You need to tell it what to install to run your project successfully.

# General guides & problems:

# Executing Gradle builds on Travis CI:
# https://guides.gradle.org/executing-gradle-builds-on-travisci/#enable_caching_of_downloaded_artifacts

# If you don't mention os: something, it will choose linux as default.

# You can tell Travis CI to use which os (operating system), arch (CPU architecture)
# and distribution of the OS to run the whole CI/CD process.
# https://docs.travis-ci.com/user/reference/overview/

# Automatically below uses Linux OS, amd64 (armv8) CPU architecture and use bionic distribution.
dist: focal

# Login into Docker before start performing scripts
# Already added $DOCKER_PASSWORD and $DOCKER_USERNAME variables in Travis CI website before write the command here.
# https://dzone.com/articles/applying-cicd-to-java-apps-using-spring-boot
# Remember link your Github to Docker to automate build on each git push.
before_install:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker pull ubuntu:20.04

# Executing scripts that you want to run here.
script:
  - docker build -t tkhenghong/flutter_fastlane_jenkins .
  - docker push tkhenghong/flutter_fastlane_jenkins:latest
